{"version":3,"file":"static/js/903.754e02b9.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/Loader/Loader.js","components/Modal/customModal.jsx","hooks/useToast.js","components/FileUploader/FileUploader.jsx","pages/mass-upload/validateFile.js","components/Select/customSelect.jsx","components/Alert/ReusableAlert.jsx","components/ErrorPopup/ErrorPopup.jsx","components/Modals/ContentErrorsModal.jsx","components/Modals/ConfirmationModal.jsx","components/bootsrap-table/Table.jsx","hooks/Mass-Upload/useMassUpload.js","pages/mass-upload/mappedList.jsx","components/Modals/ColumnMappingModal.jsx","pages/mass-upload/massUpload.jsx","utils/downloadTemplate.js","massuUploadIndex.js","services/api/PlantAssignment/fetchCsrfService.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomButton = ({\r\n  variant = \"primary\",\r\n  size = \"md\",\r\n  type = \"button\",\r\n  disabled = false,\r\n  onClick,\r\n  className = \"\",\r\n  title,\r\n  text,\r\n  imageSrc,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      type={type}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      className={className}\r\n      title={title}\r\n      {...props}\r\n    >\r\n      {imageSrc && (\r\n        <img\r\n          src={imageSrc}\r\n          alt={text}\r\n          style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\r\n        />\r\n      )}{\" \"}\r\n      {/* Render image if provided */}\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n  imageSrc: PropTypes.string, // PropType for image source\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\nimport \"./Loader.css\"; // Create a CSS file for custom styles\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst CustomModal = ({ show, onHide, title, children, footerButtons }) => {\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title || \"Modal Title\"}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        {footerButtons ? (\r\n          footerButtons.map((btn, index) => (\r\n            <Button\r\n              key={index}\r\n              variant={btn.variant || \"secondary\"}\r\n              onClick={btn.onClick}\r\n            >\r\n              {btn.label}\r\n            </Button>\r\n          ))\r\n        ) : (\r\n          <Button variant=\"secondary\" onClick={onHide}>\r\n            Close\r\n          </Button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","// hooks/useToast.js\r\nimport { toast } from \"react-toastify\";\r\nimport { Bounce } from \"react-toastify\";\r\n\r\nconst useToast = () => {\r\n  const showToast = ({\r\n    message,\r\n    type = \"default\",\r\n    position = \"top-right\",\r\n    autoClose = 2000,\r\n    hideProgressBar = false,\r\n    closeOnClick = true,\r\n    pauseOnHover = false,\r\n    pauseOnFocusLoss= false,\r\n    draggable = true,\r\n    theme = \"light\",\r\n    transition = Bounce,\r\n    ...otherOptions\r\n  }) => {\r\n    const toastFunction = toast[type] || toast;\r\n\r\n    toastFunction(message, {\r\n      position,\r\n      autoClose,\r\n      hideProgressBar,\r\n      closeOnClick,\r\n      pauseOnHover,\r\n      draggable,\r\n      theme,\r\n      transition,\r\n      ...otherOptions,\r\n    });\r\n  };\r\n\r\n  const showSuccessToast = (message, options = {}) => {\r\n    showToast({ message, type: \"success\", ...options });\r\n  };\r\n\r\n  const showErrorToast = (message, options = {}) => {\r\n    showToast({ message, type: \"error\", ...options });\r\n  };\r\n\r\n  const showInfoToast = (message, options = {}) => {\r\n    showToast({ message, type: \"info\", ...options });\r\n  };\r\n\r\n  const showWarningToast = (message, options = {}) => {\r\n    showToast({ message, type: \"warn\", ...options });\r\n  };\r\n\r\n  return { showToast, showSuccessToast, showErrorToast, showInfoToast, showWarningToast };\r\n};\r\n\r\nexport default useToast;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport \"./FileUploader.css\";\r\nimport useToast from \"../../hooks/useToast\";\r\n\r\nconst FileUpload = forwardRef(\r\n  (\r\n    {\r\n      fileTypes = [\"JPEG\", \"PNG\", \"GIF\", \"XLSX\", \"CSV\"],\r\n      multiple = true,\r\n      onUpload,\r\n      onReset,\r\n      disabled = false,\r\n      message = \"Drag & Drop your files here or Click to browse\",\r\n    },\r\n    ref\r\n  ) => {\r\n    const [files, setFiles] = useState([]);\r\n    const { showErrorToast } = useToast();\r\n\r\n    // Expose handleClearFiles to parent through ref\r\n    useImperativeHandle(ref, () => ({\r\n      handleClearFiles: (skipSuccessToast = false) => {\r\n        setFiles([]);\r\n        if (onUpload) {\r\n          onUpload([]);\r\n        }\r\n        if (onReset) {\r\n          onReset(skipSuccessToast); // Pass skipSuccessToast parameter\r\n        }\r\n      },\r\n    }));\r\n\r\n    const handleChange = (selectedFiles) => {\r\n      const fileArray = multiple ? [...selectedFiles] : [selectedFiles];\r\n      setFiles(fileArray);\r\n\r\n      // Callback function to send files to parent component\r\n      if (onUpload) {\r\n        onUpload(fileArray);\r\n      }\r\n    };\r\n\r\n    const handleClearFile = () => {\r\n      ref.current.handleClearFiles(false); // Pass false to show success toast\r\n    };\r\n    // const handleDragOver = (event) => {\r\n    //   if (disabled) {\r\n    //     event.preventDefault();\r\n    //     event.stopPropagation();\r\n    //     showErrorToast(\"Please choose an operation from the drop-down first\");\r\n    //   } else {\r\n    //     // Allow drag-over behavior for valid file uploads\r\n    //     event.preventDefault();\r\n    //     event.dataTransfer.dropEffect = \"copy\";\r\n    //   }\r\n    // };\r\n\r\n    return (\r\n      <div\r\n        className={`file-upload-container ${disabled ? \"disabled\" : \"\"}`}\r\n        // onDragOver={handleDragOver}\r\n      >\r\n        <h2>\r\n          {disabled ? \"Please select an operation first\" : \"Drag & Drop Files\"}\r\n        </h2>\r\n        <div className=\"upload-area\">\r\n          <FileUploader\r\n            multiple={multiple}\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n            disabled={disabled}\r\n            hoverTitle={disabled ? \"\" : \"Drop here\"}\r\n          />\r\n          <div className=\"file-list\">\r\n            {files.length > 0 ? (\r\n              files.map((file, index) => (\r\n                <div\r\n                  className=\"mb-4\"\r\n                  key={index}\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                >\r\n                  <p className=\"me-2 mb-0\">📁 {file.name}</p>\r\n                  <button\r\n                    onClick={handleClearFile}\r\n                    style={{\r\n                      background: \"none\",\r\n                      border: \"none\",\r\n                      cursor: disabled ? \"not-allowed\" : \"pointer\",\r\n                      color: \"red\",\r\n                      opacity: disabled ? 0.5 : 1,\r\n                    }}\r\n                    disabled={disabled}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>{message}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FileUpload;\r\n","import * as XLSX from \"xlsx\";\r\nimport config from \"./config.json\";\r\n\r\n// Add this utility function at the top of the file\r\nconst processDataInChunks = (data, chunkSize = 1000) => {\r\n  const chunks = [];\r\n  for (let i = 0; i < data.length; i += chunkSize) {\r\n    chunks.push(data.slice(i, i + chunkSize));\r\n  }\r\n  return chunks;\r\n};\r\n\r\nconst validateFile = (file, collabSpaceTitles, selectedOperation) => {\r\n  return new Promise((resolve, reject) => {\r\n    console.log(\"Starting file validation for:\", file.name, selectedOperation);\r\n    console.log(\"Selected Operation:\", selectedOperation);\r\n    console.log(\"File Name:\", file.name);\r\n    console.log(\r\n      \"[validateFile.js] Required Collaborative Space:\",\r\n      collabSpaceTitles\r\n    );\r\n\r\n    const operationNames = {\r\n      1: \"Physical Product\",\r\n      2: \"Physical Product Structure\",\r\n      3: \"Document\",\r\n      4: \"Physical Product-Document\",\r\n    };\r\n\r\n    // Get matched operation name\r\n    const matchedOperation = operationNames[selectedOperation];\r\n    console.log(\"Matched Operation:\", matchedOperation);\r\n\r\n    // Get mandatory attributes from config based on operation\r\n    const mandatoryAttributes =\r\n      config.MassUpload[matchedOperation]?.mandatoryAttributes || [];\r\n    console.log(\"Mandatory Attributes:\", mandatoryAttributes);\r\n\r\n    if (!selectedOperation) {\r\n      reject({\r\n        errors: [\"Please select an operation first.\"],\r\n        headers: [],\r\n      });\r\n      return;\r\n    }\r\n\r\n    // 🔍 Ensure collabSpaceTitles is an array\r\n    if (!Array.isArray(collabSpaceTitles)) {\r\n      console.error(\r\n        \"[validateFile.js] ❌ collabSpaceTitles is not an array!\",\r\n        collabSpaceTitles\r\n      );\r\n      reject({\r\n        errors: [\"Internal error: Invalid Collaborative Space list.\"],\r\n        headers: [],\r\n      });\r\n      return;\r\n    }\r\n\r\n    console.log(\r\n      \"[validateFile.js] Required Collaborative Spaces:\",\r\n      collabSpaceTitles\r\n    );\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsBinaryString(file);\r\n\r\n    reader.onload = async (e) => {\r\n      console.log(\"File successfully read. Parsing...\");\r\n\r\n      const workbook = XLSX.read(e.target.result, { type: \"binary\" });\r\n      const sheetName = workbook.SheetNames[0];\r\n      console.log(\"Detected sheet name:\", sheetName);\r\n\r\n      const worksheet = workbook.Sheets[sheetName];\r\n\r\n      const headers =\r\n        XLSX.utils.sheet_to_json(worksheet, { header: 1 })[0] || [];\r\n      console.log(\"Extracted headers:\", headers);\r\n\r\n      if (!headers || headers.length === 0) {\r\n        console.error(\"❌ No headers found in the file.\");\r\n        reject({\r\n          errors: [\"The uploaded file has no content or is empty.\"],\r\n          headers: [],\r\n        });\r\n        return;\r\n      }\r\n\r\n      // ✅ Convert worksheet into JSON (with empty cell values captured)\r\n      const allSheetData = XLSX.utils.sheet_to_json(worksheet, { defval: \"\" });\r\n      console.log(\"Extracted all sheet data:\", allSheetData);\r\n      console.log(`Total rows in sheet: ${allSheetData.length}`);\r\n\r\n      // Add validation for empty sheet (only headers, no data)\r\n      if (allSheetData.length === 0) {\r\n        console.error(\"❌ File contains headers but no data rows.\");\r\n        reject({\r\n          errors: [\"The uploaded file contains headers but no data rows.\"],\r\n          headers,\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Process data in chunks\r\n      const chunks = processDataInChunks(allSheetData, 1000);\r\n      console.log(`Split data into ${chunks.length} chunks of 1000 rows each`);\r\n\r\n      const validationErrors = [];\r\n      const invalidPrefixes = [\"MMI-\", \"RS-\", \"DAN-\", \"RSC-\", \"TF-\", \"ROXA-\"];\r\n\r\n      // Process each chunk\r\n      for (let chunkIndex = 0; chunkIndex < chunks.length; chunkIndex++) {\r\n        const chunk = chunks[chunkIndex];\r\n        console.log(\r\n          `Processing chunk ${chunkIndex + 1} of ${chunks.length} (${\r\n            chunk.length\r\n          } rows)`\r\n        );\r\n\r\n        // Process each row in the chunk\r\n        chunk.forEach((row, indexInChunk) => {\r\n          const globalRowIndex = chunkIndex * 1000 + indexInChunk;\r\n\r\n          // Validate mandatory fields\r\n          mandatoryAttributes.forEach((field) => {\r\n            if (!row[field] || row[field].toString().trim() === \"\") {\r\n              validationErrors.push(\r\n                `Row ${globalRowIndex + 2}: \"${field}\" is required but is empty`\r\n              );\r\n            }\r\n          });\r\n\r\n          // Rest of your existing validation logic, but use globalRowIndex + 2 instead of index + 2\r\n          // 🔍 **Step 5: Validate \"Collaborative Space\" Field**//\r\n          if (\r\n            matchedOperation === \"Physical Product\" ||\r\n            matchedOperation === \"Document\"\r\n          ) {\r\n            const userCollabSpace = row[\"Collaborative Space\"]\r\n              ? row[\"Collaborative Space\"].trim()\r\n              : \"\";\r\n            console.log(\r\n              `[validateFile.js] Row ${\r\n                globalRowIndex + 2\r\n              }: User's Collaborative Space:`,\r\n              userCollabSpace\r\n            );\r\n\r\n            if (!userCollabSpace) {\r\n              validationErrors.push(\r\n                `Row ${\r\n                  globalRowIndex + 2\r\n                }: \"Collaborative Space\" is Missing or Empty`\r\n              );\r\n            } else if (!collabSpaceTitles.includes(userCollabSpace)) {\r\n              validationErrors.push(\r\n                `Row ${\r\n                  globalRowIndex + 2\r\n                }: You are not allowed to create in \"Collaborative Space -\" (${userCollabSpace})`\r\n              );\r\n            }\r\n          }\r\n          // **🔍 EIN Number / Document Name Validation based on matchedOperation**\r\n          let valueToValidate = null;\r\n          let columnName = \"\";\r\n\r\n          if (\r\n            matchedOperation === \"Physical Product\" ||\r\n            matchedOperation === \"Physical Product Structure\"\r\n          ) {\r\n            columnName = \"EIN Number\";\r\n            valueToValidate = row[columnName]\r\n              ? row[columnName].toString().trim()\r\n              : null;\r\n            console.log(\r\n              `[validateFile.js] Row ${\r\n                globalRowIndex + 2\r\n              }: Checking EIN Number:`,\r\n              valueToValidate\r\n            );\r\n          } else if (\r\n            matchedOperation === \"Physical Product-Document\" ||\r\n            matchedOperation === \"Document\"\r\n          ) {\r\n            columnName = \"Document Name\";\r\n            valueToValidate = row[columnName]\r\n              ? row[columnName].toString().trim()\r\n              : null;\r\n            console.log(\r\n              `[validateFile.js] Row ${\r\n                globalRowIndex + 2\r\n              }: Checking Document Name:`,\r\n              valueToValidate\r\n            );\r\n          }\r\n\r\n          if (valueToValidate) {\r\n            const hasInvalidPrefix = invalidPrefixes.some((prefix) =>\r\n              valueToValidate.startsWith(prefix)\r\n            );\r\n            if (hasInvalidPrefix) {\r\n              console.error(\r\n                `[validateFile.js] ❌ Invalid prefix found in ${valueToValidate}`\r\n              );\r\n              validationErrors.push(\r\n                `Row ${\r\n                  globalRowIndex + 2\r\n                }: \"${columnName}\" value \"${valueToValidate}\" has an invalid prefix.`\r\n              );\r\n            }\r\n          } else {\r\n            console.warn(\r\n              `[validateFile.js] 🚨 Row ${\r\n                globalRowIndex + 2\r\n              }: ${columnName} is missing.`\r\n            );\r\n          }\r\n        });\r\n\r\n        console.log(`Completed chunk ${chunkIndex + 1} validation`);\r\n      }\r\n\r\n      // After processing all chunks\r\n      if (validationErrors.length > 0) {\r\n        console.log(\r\n          `Found ${validationErrors.length} validation errors across all chunks`\r\n        );\r\n        reject({\r\n          errors: validationErrors,\r\n          headers,\r\n          mandatoryAttributes,\r\n        });\r\n        return;\r\n      }\r\n\r\n      // If validation successful\r\n      console.log(\r\n        \"✅ File validation successful. No errors found in any chunk.\"\r\n      );\r\n      resolve({\r\n        headers,\r\n        sheetData: allSheetData, // Still return complete dataset\r\n        validationErrors: [],\r\n        mandatoryAttributes,\r\n      });\r\n    };\r\n\r\n    // Handle File Read Errors\r\n    reader.onerror = () => {\r\n      console.error(\"❌ Error reading the file.\");\r\n      reject({ errors: [\"File reading failed.\"], headers: [] });\r\n    };\r\n  });\r\n};\r\n\r\nexport default validateFile;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./customSelect.css\";\r\n\r\nconst CustomSelect = ({\r\n  index,\r\n  selectedValue,\r\n  options,\r\n  onChange,\r\n  size,\r\n  className,\r\n}) => {\r\n  const handleChange = (e) => {\r\n    // If index is provided use it, otherwise just pass the value\r\n    if (index !== undefined) {\r\n      onChange(index, e.target.value);\r\n    } else {\r\n      onChange(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form.Select\r\n      aria-label=\"Attribute selection\"\r\n      value={selectedValue || \"\"}\r\n      onChange={handleChange}\r\n      size={size}\r\n      className={className}\r\n    >\r\n      <option value=\"\">{options.defaultLabel}</option> {/* Default option */}\r\n      {options.list.map((option, attrIndex) => (\r\n        <option key={attrIndex} value={option.value}>\r\n          {option.label}\r\n        </option>\r\n      ))}\r\n    </Form.Select>\r\n  );\r\n};\r\n\r\nexport default CustomSelect;\r\n","import React from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nconst ReusableAlert = ({\r\n  variant = \"info\",\r\n  message,\r\n  show = true,\r\n  className = \"\",\r\n}) => {\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <Alert variant={variant} className={className}>\r\n      {typeof message === \"string\" ? message : message}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ReusableAlert;\r\n","import React, { useMemo } from \"react\";\r\nimport { AutoSizer, List, CellMeasurer, CellMeasurerCache } from \"react-virtualized\";\r\nimport \"./ErrorPopup.css\";\r\nimport ReusableAlert from \"../Alert/ReusableAlert\";\r\n\r\nconst ErrorPopup = ({ errors }) => {\r\n  console.log(`[ErrorPopup.jsx] errors:`, errors);\r\n\r\n  const processedErrors = useMemo(() => {\r\n    // Group errors by row number\r\n    const errorGroups = errors.reduce((groups, error) => {\r\n      const rowMatch = error.match(/Row (\\d+):/);\r\n      const columnMatch = error.match(/\"([^\"]*)\" (?:is required|value)/);\r\n      const errorMsg = error.split(\": \").slice(1).join(\": \");\r\n\r\n      const rowNumber = rowMatch ? rowMatch[1] : \"N/A\";\r\n      const columnName = columnMatch\r\n        ? columnMatch[1]\r\n        : error.includes(\"Collaborative Space\")\r\n        ? \"Collaborative Space\"\r\n        : \"N/A\";\r\n\r\n      if (!groups[rowNumber]) {\r\n        groups[rowNumber] = {\r\n          rowNumber,\r\n          columns: [],\r\n          errors: [],\r\n        };\r\n      }\r\n\r\n      groups[rowNumber].columns.push(columnName);\r\n      groups[rowNumber].errors.push(errorMsg || error);\r\n\r\n      return groups;\r\n    }, {});\r\n\r\n    // Convert groups to array and sort by row number\r\n    return Object.values(errorGroups).sort(\r\n      (a, b) => Number(a.rowNumber) - Number(b.rowNumber)\r\n    );\r\n  }, [errors]);\r\n\r\n  const cache = new CellMeasurerCache({\r\n    fixedWidth: true,\r\n    defaultHeight: 50,\r\n  });\r\n\r\n  const rowRenderer = ({ key, index, style, parent }) => {\r\n    const error = processedErrors[index];\r\n    return (\r\n      <CellMeasurer\r\n        key={key}\r\n        cache={cache}\r\n        columnIndex={0}\r\n        rowIndex={index}\r\n        parent={parent}\r\n      >\r\n        <div\r\n          style={style}\r\n          className=\"table-row\"\r\n        >\r\n          <div className=\"table-cell\" style={{ width: \"15%\" }}>\r\n            {error.rowNumber}\r\n          </div>\r\n          <div className=\"table-cell\" style={{ width: \"25%\" }}>\r\n            {error.columns.map((column, i) => (\r\n              <div key={i}>{column}</div>\r\n            ))}\r\n          </div>\r\n          <div className=\"table-cell\" style={{ width: \"60%\" }}>\r\n            <ul className=\"error-list\">\r\n              {error.errors.map((err, i) => (\r\n                <li key={i}>{err}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </CellMeasurer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"error-popup-container\">\r\n      <ReusableAlert\r\n        variant=\"danger\"\r\n        message={\r\n          <>\r\n            <strong>⚠️ Note:</strong> Below reports show only uploaded\r\n            spreadsheet error rows. To resolve these issues, update the\r\n            spreadsheet and re-import. ({processedErrors.length} errors found)\r\n          </>\r\n        }\r\n        className=\"custom-alert\"\r\n      />\r\n\r\n      <div className=\"table-wrapper\"> \r\n        {/* Static Header */}\r\n        <div className=\"static-header\">\r\n          <div className=\"header-cell\" style={{ width: \"15%\" }}>\r\n            Row Number\r\n          </div>\r\n          <div className=\"header-cell\" style={{ width: \"25%\" }}>\r\n            Column Name\r\n          </div>\r\n          <div className=\"header-cell\" style={{ width: \"60%\" }}>\r\n            Error Description\r\n          </div>\r\n        </div>\r\n\r\n        {/* Virtualized Error List */}\r\n        <div className=\"table-container\">\r\n          <AutoSizer>\r\n            {({ height, width }) => (\r\n              <List\r\n                width={width}\r\n                height={height}\r\n                rowCount={processedErrors.length}\r\n                rowHeight={cache.rowHeight}\r\n                deferredMeasurementCache={cache}\r\n                rowRenderer={rowRenderer}\r\n              />\r\n            )}\r\n          </AutoSizer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPopup;","// ContentErrorsModal.jsx\r\nimport React from \"react\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\nimport ErrorPopup from \"../../components/ErrorPopup/ErrorPopup\";\r\n\r\nconst ContentErrorsModal = ({ show, onHide, errors }) => {\r\n  console.log(`[ContentErrorsModal.jsx] errors:`, errors);\r\n  return (\r\n    <CustomModal\r\n      show={show}\r\n      onHide={onHide}\r\n      title=\"Content Errors\"\r\n      footerButtons={[\r\n        {\r\n          label: \"Close\",\r\n          variant: \"danger\",\r\n          onClick: onHide,\r\n        },\r\n      ]}\r\n    >\r\n      <ErrorPopup errors={errors} />\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default ContentErrorsModal;\r\n","// ConfirmationModal.jsx\r\nimport React from \"react\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\n\r\nconst ConfirmationModal = ({ show, onHide, onConfirm }) => {\r\n  return (\r\n    <CustomModal\r\n      show={show}\r\n      onHide={onHide}\r\n      title=\"Confirmation\"\r\n      footerButtons={[\r\n        {\r\n          label: \"Cancel\",\r\n          variant: \"danger\",\r\n          onClick: onHide,\r\n        },\r\n        {\r\n          label: \"Confirm\",\r\n          variant: \"success\",\r\n          onClick: onConfirm,\r\n        },\r\n      ]}\r\n    >\r\n      <p>Are you sure you want to submit?</p>\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport CustomSelect from \"../Select/customSelect\";\r\nimport \"./staticTable.css\";\r\n\r\nconst StaticTable = ({\r\n  columnHeaders,\r\n  handleCheckboxChange,\r\n  checkedItems,\r\n  handleSelectChange,\r\n  selectedAttributes,\r\n  mappedAttributes, // Passed mapped attributes\r\n  mandatoryAttributes,\r\n}) => {\r\n  const { allNLSValues = [], dropdownOptions = [] } = mappedAttributes || {};\r\n\r\n  console.log(\"Mapped Attributes prop:\", mappedAttributes);\r\n  console.log(\"columnHeaders\", columnHeaders);\r\n  console.log(\"static table recieved manditory Attribute\", mandatoryAttributes);\r\n  console.log(\"Dropdown Options :\", dropdownOptions);\r\n\r\n  const hasMatchingNLS = (header) => {\r\n    if (!Array.isArray(allNLSValues)) {\r\n      console.warn(\"allNLSValues is not an array:\", allNLSValues);\r\n      return false;\r\n    }\r\n    const match = allNLSValues.includes(header);\r\n    console.log(`Header \"${header}\" NLS match:`, match ? \"✅\" : \"❌\");\r\n    return match;\r\n  };\r\n\r\n  return (\r\n    <Table bordered className=\"table-light \">\r\n      <thead>\r\n        <tr>\r\n          <th className=\"header-styling\"> Column Name</th>\r\n          <th className=\"header-styling\">Attribute Name</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {columnHeaders.map((header, index) => {\r\n          const isMandatory = mandatoryAttributes.includes(header);\r\n          const hasNLS = hasMatchingNLS(header);\r\n          // Log the state of each row\r\n          console.log(`Row ${index}:`, {\r\n            header,\r\n            hasNLS,\r\n            isMandatory,\r\n            defaultLabel: hasNLS ? header : \"\",\r\n          });\r\n          return (\r\n            <tr key={index}>\r\n              <td>{header}</td>\r\n              <td>\r\n                <CustomSelect\r\n                  index={index}\r\n                  selectedValue={selectedAttributes[index] || header}\r\n                  onChange={handleSelectChange}\r\n                  size=\"lg\"\r\n                  className=\"w-100\"\r\n                  disabled={!hasNLS}\r\n                  options={{\r\n                    defaultLabel: hasNLS\r\n                      ? header\r\n                      : \"Please select from Drop Down\", // Show header only if NLS matches\r\n                    list: dropdownOptions.map((attr) => ({\r\n                      // Always show all mapped attributes\r\n                      value: attr.backendName,\r\n                      label: attr.uiLabel,\r\n                    })),\r\n                  }}\r\n                />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default StaticTable;\r\n","import { MSG_FETCH_CSRF_HEADERS_FAILED } from \"../../utils/toastMessages\";\r\nimport useToast from \"../useToast\";\r\nimport { fetchCsrfToken } from \"../../services/api/PlantAssignment/fetchCsrfService\";\r\nimport { callEnoviaWebService, fetchData } from \"../../utils/helpers\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useMassUpload = () => {\r\n  const { showErrorToast } = useToast();\r\n  const [mappedAttributes, setMappedAttributes] = useState([]);\r\n  const ENOVIA_BASE_URL = process.env.REACT_APP_ENOVIA_BASE_URL;\r\n\r\n  // Function to Fetch Spreadsheet Column Mapping\r\n  const fetchColumnMapping = async () => {\r\n    try {\r\n      console.log(\"Fetching column mapping...\");\r\n\r\n      // Get CSRF Headers\r\n      const headers = await fetchCsrfToken();\r\n      if (!headers) {\r\n        showErrorToast(MSG_FETCH_CSRF_HEADERS_FAILED);\r\n        return;\r\n      }\r\n\r\n      // 🔹 Step 1: Call API 1 (GET) to Fetch Metadata\r\n      const metadataResponse = await callEnoviaWebService(\r\n        \"GET\",\r\n        `${ENOVIA_BASE_URL}/resources/v1/modeler/dseng/dseng:EngItem/search?%24top=1`,\r\n        \"\",\r\n        headers\r\n      );\r\n\r\n      if (!metadataResponse || !metadataResponse.output) {\r\n        throw new Error(\"Failed to fetch metadata.\");\r\n      }\r\n      console.log(\"Metadata Member:\", metadataResponse.output.member);\r\n\r\n      const objectId = metadataResponse.output?.member?.[0]?.id;\r\n      if (!objectId) {\r\n        throw new Error(\"No object ID found in metadata.\");\r\n      }\r\n\r\n      console.log(\"Extracted Object ID:\", objectId);\r\n\r\n      // 🔹 Step 2: Call API 2 (POST) to Fetch Attributes\r\n      const attributeResponse = await callEnoviaWebService(\r\n        \"POST\",\r\n        `${ENOVIA_BASE_URL}/resources/v1/collabServices/attributes/op/read?tenant=OI000186152&xrequestedwith=xmlhttprequest`,\r\n        {\r\n          busIDs: [objectId],\r\n        },\r\n        headers\r\n      );\r\n\r\n      if (!attributeResponse || !attributeResponse.output) {\r\n        throw new Error(\"Failed to fetch attribute data.\");\r\n      }\r\n      console.log(\"Attribute Response:\", attributeResponse.output);\r\n\r\n      // 🔹 Step 3: Extract & Map Relevant Attributes\r\n\r\n      const groupData = attributeResponse.output.results?.[0]?.groupData || [];\r\n      console.log(\r\n        \"Full Group Data (with all NLS values):\",\r\n        groupData.map((item) => item.nls)\r\n      );\r\n\r\n      // Store all NLS values from groupData for header matching\r\n      const allNLSValues = groupData.map((item) => item.nls);\r\n\r\n      const relevantAttributes =\r\n        attributeResponse.output.results?.[0]?.groupData?.filter(\r\n          (attr) => attr.deploymentExtension === true\r\n        ) || [];\r\n\r\n      // const relevantAttributes = groupData.filter(\r\n      //   (attr) => attr.deploymentExtension === true\r\n      // );\r\n\r\n      const mappedData = relevantAttributes.map((attr) => ({\r\n        uiLabel: attr.nls, // UI Display Name\r\n        backendName: attr.name, // Backend Name\r\n      }));\r\n\r\n      console.log(\"Mapped Attributes:\", mappedData);\r\n      console.log(\"All available NLS values:\", allNLSValues);\r\n      console.log(\"Mapped Attributes (for dropdown):\", mappedData);\r\n      setMappedAttributes({\r\n        allNLSValues: groupData.map((item) => item.nls),\r\n        dropdownOptions: mappedData,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching column mapping:\", error);\r\n      showErrorToast(error.message || \"Error fetching column mapping.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchColumnMapping();\r\n  }, []);\r\n\r\n  return { mappedAttributes };\r\n};\r\n\r\nexport default useMassUpload;\r\n","import React, { useState, useEffect } from \"react\"; // Corrected import for useState\r\nimport StaticTable from \"../../components/bootsrap-table/Table\";\r\nimport useMassUpload from \"../../hooks/Mass-Upload/useMassUpload\";\r\n\r\nconst MappedList = ({ columnHeaders, mandatoryAttributes }) => {\r\n  console.log(\"MappedList - Received columnHeaders:\", columnHeaders);\r\n  console.log(\r\n    \"MappedList - Received mandatoryAttributes:\",\r\n    mandatoryAttributes\r\n  );\r\n  const { mappedAttributes } = useMassUpload();\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [selectedAttributes, setSelectedAttributes] = useState({});\r\n  const [filterMappedAttributes, setfilterMappedAttributes] = useState({\r\n    allNLSValues: [],\r\n    dropdownOptions: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(mappedAttributes)) {\r\n      console.log(\"Filtered mapped attributes:\", mappedAttributes);\r\n      setfilterMappedAttributes({\r\n        allNLSValues: mappedAttributes.map((attr) => attr.uiLabel),\r\n        dropdownOptions: mappedAttributes,\r\n      });\r\n    }\r\n  }, [mappedAttributes]);\r\n\r\n  const handleCheckboxChange = (index) => {\r\n    setCheckedItems({ ...checkedItems, [index]: !checkedItems[index] });\r\n  };\r\n  const handleSelectChange = (index, selectedValue) => {\r\n    setSelectedAttributes({ ...selectedAttributes, [index]: selectedValue });\r\n  };\r\n\r\n  return (\r\n    <StaticTable\r\n      columnHeaders={columnHeaders}\r\n      handleCheckboxChange={handleCheckboxChange}\r\n      checkedItems={checkedItems}\r\n      handleSelectChange={handleSelectChange}\r\n      selectedAttributes={selectedAttributes}\r\n      mappedAttributes={mappedAttributes}\r\n      mandatoryAttributes={mandatoryAttributes}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MappedList;\r\n","// ColumnMappingModal.jsx\r\nimport React from \"react\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\nimport ReusableAlert from \"../../components/Alert/ReusableAlert\";\r\nimport MappedList from \"../../pages/mass-upload/mappedList\";\r\n\r\nconst ColumnMappingModal = ({\r\n  show,\r\n  onHide,\r\n  columnHeaders,\r\n  mandatoryAttributes,\r\n}) => {\r\n  const errorMessage = (\r\n    <>\r\n      <strong>⚠️Note:</strong> All column(s) of uploaded Spreadsheet are mapped\r\n      to valid Attribute Name. All mandatory Attribute Name is mapped to\r\n      uploaded Spreadsheet Column Name.\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <CustomModal\r\n      show={show}\r\n      onHide={onHide}\r\n      title=\"Manage Spreadsheet Columns\"\r\n      footerButtons={[\r\n        {\r\n          label: \"Ok\",\r\n          variant: \"primary\",\r\n          onClick: onHide,\r\n        },\r\n        {\r\n          label: \"Cancel\",\r\n          variant: \"danger\",\r\n          onClick: onHide,\r\n        },\r\n      ]}\r\n    >\r\n      <ReusableAlert\r\n        variant=\"info\"\r\n        message={errorMessage}\r\n        className=\"mapped-popup-alert\"\r\n      />\r\n      <MappedList\r\n        columnHeaders={columnHeaders}\r\n        mandatoryAttributes={mandatoryAttributes}\r\n      />\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default ColumnMappingModal;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Mockup.css\";\r\nimport { Form, Stack } from \"react-bootstrap\";\r\nimport CustomButton from \"../../components/Button/Button\";\r\nimport FileUpload from \"../../components/FileUploader/FileUploader\";\r\nimport { downloadTemplate } from \"../../utils/downloadTemplate\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport validateFile from \"./validateFile\";\r\nimport CustomSelect from \"../../components/Select/customSelect\";\r\nimport { globalCollabSpaceTitles } from \"../../services/api/droppableService\";\r\nimport ContentErrorsModal from \"../../components/Modals/ContentErrorsModal\";\r\nimport ConfirmationModal from \"../../components/Modals/ConfirmationModal\";\r\nimport ColumnMappingModal from \"../../components/Modals/ColumnMappingModal\";\r\n\r\nconst MassUpload = () => {\r\n  const [collabTitles, setCollabTitles] = useState([]);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [errorModalShow, setErrorModalShow] = useState(false);\r\n  const [showContentErrors, setShowContentErrors] = useState(false);\r\n  const [showSpreadsheetModal, setShowSpreadsheetModal] = useState(false); // New state for spreadsheet modal\r\n  const { showErrorToast, showSuccessToast } = useToast();\r\n  const [isValidating, setIsValidating] = useState(false);\r\n  const [operationChoice, setOperationChoice] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n  const [columnHeaders, setColumnHeaders] = useState([]);\r\n  const [mandatoryAttributes, setMandatoryAttributes] = useState([]);\r\n  const fileUploaderRef = useRef(); // Add this ref\r\n\r\n  const errorMessage = (\r\n    <>\r\n      <strong>⚠️Note:</strong> All column(s) of uploaded Spreadsheet are mapped\r\n      to valid Attribute Name. All mandatory Attribute Name is mapped to\r\n      uploaded Spreadsheet Column Name.\r\n    </>\r\n  );\r\n\r\n  useEffect(() => {\r\n    // Log the global variable directly to verify its contents\r\n    console.log(\r\n      \"[MassUpload.jsx] Global collabSpaceTitles:\",\r\n      globalCollabSpaceTitles\r\n    );\r\n    if (Array.isArray(globalCollabSpaceTitles)) {\r\n      setCollabTitles([...globalCollabSpaceTitles]);\r\n    } else {\r\n      console.error(\r\n        \"[MassUpload.jsx] ❌ globalCollabSpaceTitles is not an array!\",\r\n        globalCollabSpaceTitles\r\n      );\r\n    }\r\n    console.log(\"[MassUpload.jsx] Retrieved collabSpaceTitles:\", collabTitles);\r\n  }, []);\r\n\r\n  const handleFileUpload = async (files) => {\r\n    if (files.length === 0) return;\r\n\r\n    try {\r\n      setIsValidating(true);\r\n      console.log(\"Starting file validation...\");\r\n\r\n      const validationResult = await validateFile(\r\n        files[0],\r\n        collabTitles,\r\n        operationChoice\r\n      );\r\n      console.log(\"Validation Result:\", validationResult);\r\n\r\n      const {\r\n        headers = [],\r\n        validationErrors = [],\r\n        mandatoryAttributes = [],\r\n      } = validationResult;\r\n\r\n      console.log(\"Extracted data:\", {\r\n        headers,\r\n        validationErrors,\r\n        mandatoryAttributes,\r\n      });\r\n\r\n      setColumnHeaders(headers);\r\n      setMandatoryAttributes(mandatoryAttributes);\r\n\r\n      if (validationErrors.length === 0) {\r\n        setErrors([]);\r\n        showSuccessToast(\"No Error! File validated successfully!\");\r\n      } else {\r\n        setErrors(validationErrors);\r\n        setErrorModalShow(true);\r\n      }\r\n    } catch (errorResponse) {\r\n      console.error(\"Validation failed:\", errorResponse);\r\n\r\n      const {\r\n        errors: responseErrors = [\"Unknown validation error.\"],\r\n        headers: responseHeaders = [],\r\n        mandatoryAttributes: responseMandatoryAttributes = [],\r\n        isTemplateMismatch = false,\r\n      } = errorResponse;\r\n\r\n      // If there's a template mismatch, show error and reset widget\r\n      if (isTemplateMismatch) {\r\n        showErrorToast(\r\n          \"The template uploaded and the selected operation do not match\"\r\n        );\r\n        handleReset(true); // Pass true to skip success toast\r\n        // Clear the file uploader\r\n        if (fileUploaderRef.current) {\r\n          fileUploaderRef.current.handleClearFiles();\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Only set these states if it's not a template mismatch\r\n      setErrors(responseErrors);\r\n      setColumnHeaders(responseHeaders);\r\n      setMandatoryAttributes(responseMandatoryAttributes);\r\n      setErrorModalShow(true);\r\n    } finally {\r\n      setIsValidating(false);\r\n    }\r\n  };\r\n\r\n  const handleDownloadTemplate = () => {\r\n    downloadTemplate(showErrorToast)(operationChoice);\r\n  };\r\n\r\n  const handleReset = (skipSuccessToast = false) => {\r\n    // Reset all states to their initial values\r\n    setModalShow(false);\r\n    setErrorModalShow(false);\r\n    setShowContentErrors(false);\r\n    setShowSpreadsheetModal(false);\r\n    setIsValidating(false);\r\n    setOperationChoice(\"\");\r\n    setErrors([]);\r\n    setColumnHeaders([]);\r\n    setMandatoryAttributes([]);\r\n\r\n    // Reset the dropdown\r\n    const selectElement = document.querySelector(\r\n      'select[aria-label=\"Choose Operations\"]'\r\n    );\r\n    if (selectElement) {\r\n      selectElement.value = \"\";\r\n    }\r\n\r\n    // Only show success toast if not skipped\r\n    if (!skipSuccessToast) {\r\n      showSuccessToast(\"Widget reset successfully!\");\r\n    }\r\n  };\r\n\r\n  const handleOpenSpreadsheetModal = () => {\r\n    setShowContentErrors(false); // Close content errors modal\r\n    setShowSpreadsheetModal(true); // Open spreadsheet modal\r\n  };\r\n\r\n  const handleOperationChange = (value) => {\r\n    console.log(\"Operation selected:\", value); // Debug log\r\n    setOperationChoice(value);\r\n  };\r\n\r\n  // Add this useEffect to monitor state changes\r\n  useEffect(() => {\r\n    console.log(\"Operation Choice updated:\", operationChoice);\r\n  }, [operationChoice]);\r\n\r\n  // It will be disabled if no file is uploaded (no headers) or if there are validation errors.\r\n  const submitDisabled = columnHeaders.length === 0 || errors.length > 0;\r\n  const manageSpreadsheetDisabled = columnHeaders.length === 0; // Disable if no file uploaded\r\n\r\n  const handleConfirmSubmit = () => {\r\n    alert(\"Confirmed!\");\r\n    setModalShow(false);\r\n  };\r\n\r\n  console.log(\"Operation Choice:\", errors);\r\n\r\n  // Add this computed value for FileUpload component\r\n  const isFileUploadDisabled = !operationChoice;\r\n\r\n  return (\r\n    <>\r\n      <Stack className=\"mt-3\" gap={4}>\r\n        {/* Choose operation and download template */}\r\n        <Stack direction=\"horizontal\">\r\n          <CustomSelect\r\n            selectedValue={operationChoice}\r\n            onChange={handleOperationChange}\r\n            size=\"lg\"\r\n            className=\"w-50\"\r\n            options={{\r\n              defaultLabel: \"Choose Operations\",\r\n              list: [\r\n                { value: \"1\", label: \"Physical Product/Raw Material\" },\r\n                { value: \"2\", label: \"Physical Product Structure\" },\r\n                { value: \"3\", label: \"Document\" },\r\n                { value: \"4\", label: \"Physical Product-Document\" },\r\n              ],\r\n            }}\r\n          />\r\n          {/* Conditionally render multiple file input for Document type */}\r\n          <div className=\"p-2 ms-auto\">\r\n            {operationChoice === \"3\" && (\r\n              <Form.Group controlId=\"formFileMultiple\">\r\n                <Form.Control type=\"file\" multiple />\r\n              </Form.Group>\r\n            )}\r\n          </div>\r\n          <div className=\"p-2\">\r\n            <CustomButton\r\n              variant=\"link ms-auto\"\r\n              size=\"lg\"\r\n              onClick={handleDownloadTemplate}\r\n              text=\"Download Template\"\r\n            />\r\n          </div>\r\n        </Stack>\r\n\r\n        {/* Drag and Drop File Upload */}\r\n        {/* Modified FileUpload with disabled state */}\r\n        <div className={isFileUploadDisabled ? \"opacity-50\" : \"\"}>\r\n          <FileUpload\r\n            ref={fileUploaderRef}\r\n            fileTypes={[\"XLSX\"]}\r\n            multiple={false}\r\n            onUpload={handleFileUpload}\r\n            onReset={handleReset}\r\n            disabled={isFileUploadDisabled}\r\n            message={\r\n              isFileUploadDisabled\r\n                ? \"Please select an operation first\"\r\n                : \"Drag & Drop your files here or Click to browse\"\r\n            }\r\n          />\r\n        </div>\r\n\r\n        {/* Show loader while validating */}\r\n        {isValidating && <Loader />}\r\n\r\n        {/* Submit Button and Content Error Button */}\r\n        <Stack direction=\"horizontal\" gap={2}>\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label=\"Background\"\r\n            className=\"size-increase\"\r\n          />\r\n          <div className=\"ms-auto d-flex gap-5\">\r\n            {errors.length > 0 && (\r\n              <CustomButton\r\n                variant=\"danger\"\r\n                onClick={() => setShowContentErrors(true)}\r\n                text={`Content Errors (${errors.length})`}\r\n              />\r\n            )}\r\n\r\n            <CustomButton\r\n              variant={manageSpreadsheetDisabled ? \"secondary\" : \"info\"}\r\n              onClick={handleOpenSpreadsheetModal}\r\n              text=\"Manage Spreadsheet Columns\"\r\n              disabled={manageSpreadsheetDisabled}\r\n            />\r\n\r\n            <CustomButton\r\n              variant={submitDisabled ? \"secondary\" : \"primary\"}\r\n              disabled={submitDisabled}\r\n              size=\"lg\"\r\n              onClick={() => setModalShow(true)}\r\n              text=\"Submit\"\r\n            />\r\n          </div>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      {/* Content Errors Modal */}\r\n      <ContentErrorsModal\r\n        show={showContentErrors}\r\n        onHide={() => setShowContentErrors(false)}\r\n        errors={errors}\r\n      />\r\n\r\n      {/* Confirmation Modal */}\r\n\r\n      <ConfirmationModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        onConfirm={handleConfirmSubmit}\r\n      />\r\n\r\n      {/* Column Mapping */}\r\n\r\n      <ColumnMappingModal\r\n        show={showSpreadsheetModal}\r\n        onHide={() => setShowSpreadsheetModal(false)}\r\n        columnHeaders={columnHeaders}\r\n        mandatoryAttributes={mandatoryAttributes}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MassUpload;\r\n","import { MSG_DROPDOWN_NOT_SELECTED } from \"./toastMessages\";\r\n\r\nexport const downloadTemplate = (showErrorToast) => (operationChoice) => {\r\n  let url = \"\";\r\n  switch (operationChoice) {\r\n    case \"1\": // Physical Product/Raw Material\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProductSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"2\": // Physical Product Structure\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProductStructureSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"3\": // Document\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/DocumentSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"4\": // Physical Product-Document\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProduct-DocumentSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    default:\r\n      showErrorToast(MSG_DROPDOWN_NOT_SELECTED);\r\n      return;\r\n  }\r\n  window.open(url, \"_blank\");\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport \"./styles/variables.css\";\r\nimport MassUpload from \"./pages/mass-upload/massUpload\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      <MassUpload />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n\r\n","import { loadWAFData } from \"../../../utils/helpers\";\r\n\r\nexport const fetchCsrfToken = async () => {\r\n  try {\r\n    let securityContext1 = window.widget.getValue(\"Credentials\");\r\n    const WAFData = await loadWAFData();\r\n    console.log(\"Security Context is:\", securityContext1);\r\n    const csrfURL = process.env.REACT_APP_CSRF_URL;\r\n\r\n    const response = await new Promise((resolve, reject) => {\r\n      WAFData.authenticatedRequest(csrfURL, {\r\n        method: \"GET\",\r\n        type: \"json\",\r\n        onComplete: resolve,\r\n        onFailure: reject,\r\n      });\r\n    });\r\n\r\n    const csrfToken = response.csrf.name;\r\n    const csrfValue = response.csrf.value;\r\n    const securityContextHeader = \"SecurityContext\";\r\n    const securityContextValue = securityContext1;\r\n\r\n    const headers = {\r\n      [csrfToken]: csrfValue,\r\n      [securityContextHeader]: securityContextValue,\r\n    };\r\n    return headers;\r\n  } catch (error) {\r\n    console.error(\"[CSRF] Failed to fetch token:\", error);\r\n    return; // Return empth so that the else block should execute.\r\n  }\r\n};\r\n"],"names":["_ref","variant","size","type","disabled","onClick","className","title","text","imageSrc","props","_objectWithoutProperties","_excluded","_jsxs","Button","_objectSpread","children","_jsx","src","alt","style","width","height","marginRight","Loader","show","onHide","footerButtons","Modal","centered","Header","closeButton","Title","Body","Footer","map","btn","index","label","useToast","showToast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","transition","Bounce","otherOptions","toast","showSuccessToast","options","arguments","length","undefined","showErrorToast","showInfoToast","showWarningToast","forwardRef","ref","fileTypes","multiple","onUpload","onReset","files","setFiles","useState","useImperativeHandle","handleClearFiles","skipSuccessToast","handleClearFile","current","concat","FileUploader","handleChange","selectedFiles","fileArray","name","types","hoverTitle","file","display","alignItems","background","border","cursor","color","opacity","validateFile","collabSpaceTitles","selectedOperation","Promise","resolve","reject","_config$MassUpload$ma","console","log","matchedOperation","mandatoryAttributes","config","errors","headers","Array","isArray","error","reader","FileReader","readAsBinaryString","onload","async","workbook","XLSX","e","target","result","sheetName","SheetNames","worksheet","Sheets","sheet_to_json","header","allSheetData","defval","chunks","data","chunkSize","i","push","slice","processDataInChunks","validationErrors","invalidPrefixes","chunkIndex","chunk","forEach","row","indexInChunk","globalRowIndex","field","toString","trim","userCollabSpace","includes","valueToValidate","columnName","some","prefix","startsWith","warn","sheetData","onerror","selectedValue","onChange","Form","Select","value","defaultLabel","list","option","attrIndex","Alert","processedErrors","useMemo","errorGroups","reduce","groups","rowMatch","match","columnMatch","errorMsg","split","join","rowNumber","columns","Object","values","sort","a","b","Number","cache","CellMeasurerCache","fixedWidth","defaultHeight","rowRenderer","_ref2","key","parent","CellMeasurer","columnIndex","rowIndex","column","err","ReusableAlert","_Fragment","AutoSizer","_ref3","List","rowCount","rowHeight","deferredMeasurementCache","CustomModal","ErrorPopup","onConfirm","columnHeaders","handleCheckboxChange","checkedItems","handleSelectChange","selectedAttributes","mappedAttributes","allNLSValues","dropdownOptions","Table","bordered","isMandatory","hasNLS","hasMatchingNLS","CustomSelect","attr","backendName","uiLabel","useMassUpload","setMappedAttributes","ENOVIA_BASE_URL","process","useEffect","_metadataResponse$out","_metadataResponse$out2","_metadataResponse$out3","_attributeResponse$ou","_attributeResponse$ou2","_attributeResponse$ou3","_attributeResponse$ou4","_attributeResponse$ou5","fetchCsrfToken","MSG_FETCH_CSRF_HEADERS_FAILED","metadataResponse","callEnoviaWebService","output","Error","member","objectId","id","attributeResponse","busIDs","groupData","results","item","nls","mappedData","filter","deploymentExtension","fetchColumnMapping","setCheckedItems","setSelectedAttributes","filterMappedAttributes","setfilterMappedAttributes","StaticTable","errorMessage","MappedList","MassUpload","collabTitles","setCollabTitles","modalShow","setModalShow","errorModalShow","setErrorModalShow","showContentErrors","setShowContentErrors","showSpreadsheetModal","setShowSpreadsheetModal","isValidating","setIsValidating","operationChoice","setOperationChoice","setErrors","setColumnHeaders","setMandatoryAttributes","fileUploaderRef","useRef","globalCollabSpaceTitles","handleReset","selectElement","document","querySelector","submitDisabled","manageSpreadsheetDisabled","isFileUploadDisabled","Stack","gap","direction","Group","controlId","Control","CustomButton","handleDownloadTemplate","url","MSG_DROPDOWN_NOT_SELECTED","window","open","downloadTemplate","FileUpload","validationResult","errorResponse","responseErrors","responseHeaders","responseMandatoryAttributes","isTemplateMismatch","Check","handleOpenSpreadsheetModal","ContentErrorsModal","ConfirmationModal","handleConfirmSubmit","alert","ColumnMappingModal","root","widget","hasOnLoadRun","addEvent","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","body","getElementById","createElement","appendChild","ReactDOM","render","Provider","store","ToastContainer","start","securityContext1","getValue","WAFData","loadWAFData","csrfURL","response","authenticatedRequest","method","onComplete","onFailure","csrfToken","csrf","csrfValue","securityContextHeader","securityContextValue"],"sourceRoot":""}